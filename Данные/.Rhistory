df_16[country, evaluation_of],
df_17[country, evaluation_of],
df_18[country, evaluation_of],
df_19[country, evaluation_of],
df_20[country, evaluation_of],
df_21[country, evaluation_of]
),
row.names<-2014:2021
)
colnames(SI)<-country
mn<-min(SI, na.rm=TRUE)
mx<-max(SI, na.rm=TRUE)
plot( 2014:2021, SI$'Germany', xlab='Года', ylab='Индекс безопасности', ylim=c(mn-13,mx+13),
main='Оценка индекса безопасности', col='blue', type='b', lty=1, pch=1,  lwd=2)
lines(2014:2021, SI$'United Kingdom', type='b', col='green', lty=1, pch=1, lwd=2)
lines(2014:2021, SI$'Greece', type='b', col='red', lty=1, pch=1, lwd=2)
lines(2014:2021, SI$'Romania', type='b', col='purple', lty=1, pch=1, lwd=2)
lines(2014:2021, SI$'Norway', type='b', col='gold', lty=1, pch=1, lwd=2)
legend('topright', cex=0.6, country,fill=c('blue', 'green', 'red', 'purple', 'gold'))
# оценка медицинского обслуживания
evaluation_of<-'Health Care Index'
HCI<-as.data.frame(
rbind(
df_14[country, evaluation_of],
df_15[country, evaluation_of],
df_16[country, evaluation_of],
df_17[country, evaluation_of],
df_18[country, evaluation_of],
df_19[country, evaluation_of],
df_20[country, evaluation_of],
df_21[country, evaluation_of]
),
row.names<-2014:2021
)
colnames(HCI)<-country
mn<-min(HCI, na.rm=TRUE)
mx<-max(HCI, na.rm=TRUE)
plot(2014:2021, HCI$'Germany', xlab='Года', ylab='Индекс медицинского обслуживания', ylim=c(mn-13,mx+13),
main='Оценка индекс медицинского обслуживания ', col='blue', type='b', lty=1, pch=1,  lwd=2)
lines(2014:2021, HCI$'United Kingdom', type='b', col='green', lty=1, pch=1, lwd=2)
lines(2014:2021, HCI$'Greece', type='b', col='red', lty=1, pch=1, lwd=2)
lines(2014:2021, HCI$'Romania', type='b', col='purple', lty=1, pch=1, lwd=2)
lines(2014:2021, HCI$'Norway', type='b', col='gold', lty=1, pch=1, lwd=2)
legend('bottomright', cex=0.6, country,fill=c('blue', 'green', 'red', 'purple', 'gold'))
# оценка индекса прожиточного минимума
evaluation_of<-'Cost of Living Index'
CLI<-as.data.frame(
rbind(
df_14[country, evaluation_of],
df_15[country, evaluation_of],
df_16[country, evaluation_of],
df_17[country, evaluation_of],
df_18[country, evaluation_of],
df_19[country, evaluation_of],
df_20[country, evaluation_of],
df_21[country, evaluation_of]
),
row.names<-2014:2021
)
colnames(CLI)<-country
mn<-min(CLI, na.rm=TRUE)
mx<-max(CLI, na.rm=TRUE)
plot(2014:2021, CLI$'Germany', xlab='Года', ylab='Индекс прожиточного минимума', ylim=c(mn-13,mx+13),
main='Оценка индекса прожиточного минимума', col='blue', type='b', lty=1, pch=1,  lwd=2)
lines(2014:2021, CLI$'United Kingdom', type='b', col='green', lty=1, pch=1, lwd=2)
lines(2014:2021, CLI$'Greece', type='b', col='red', lty=1, pch=1, lwd=2)
lines(2014:2021, CLI$'Romania', type='b', col='purple', lty=1, pch=1, lwd=2)
lines(2014:2021, CLI$'Norway', type='b', col='gold', lty=1, pch=1, lwd=2)
legend('topright', cex=0.7, country,fill=c('blue', 'green', 'red', 'purple', 'gold'))
# оценка отношения цены на жилье к доходу
evaluation_of<-'Property Price to Income Ratio'
PPIR<-as.data.frame(
rbind(
df_14[country, evaluation_of],
df_15[country, evaluation_of],
df_16[country, evaluation_of],
df_17[country, evaluation_of],
df_18[country, evaluation_of],
df_19[country, evaluation_of],
df_20[country, evaluation_of],
df_21[country, evaluation_of]
),
row.names<-2014:2021
)
colnames(PPIR)<-country
mn<-min(PPIR, na.rm=TRUE)
mx<-max(PPIR, na.rm=TRUE)
plot( 2014:2021, PPIR$'Germany', xlab='Года', ylab='Отношение цены на жилье к доходу', ylim=c(mn-13,mx+13),
main='Оценка отношения цены на жилье к доходу', col='blue', type='b', lty=1, pch=1,  lwd=2)
lines(2014:2021, PPIR$'United Kingdom', type='b', col='green', lty=1, pch=1, lwd=2)
lines(2014:2021, PPIR$'Greece', type='b', col='red', lty=1, pch=1, lwd=2)
lines(2014:2021, PPIR$'Romania', type='b', col='purple', lty=1, pch=1, lwd=2)
lines(2014:2021, PPIR$'Norway', type='b', col='gold', lty=1, pch=1, lwd=2)
legend('topright', cex=0.7, country,fill=c('blue', 'green', 'red', 'purple', 'gold'))
# оценка индекс времени движения на дороге
evaluation_of<-'Traffic Commute Time Index'
TCTI<-as.data.frame(
rbind(
df_14[country, evaluation_of],
df_15[country, evaluation_of],
df_16[country, evaluation_of],
df_17[country, evaluation_of],
df_18[country, evaluation_of],
df_19[country, evaluation_of],
df_20[country, evaluation_of],
df_21[country, evaluation_of]
),
row.names<-2014:2021
)
colnames(TCTI)<-country
mn<-min(TCTI, na.rm=TRUE)
mx<-max(TCTI, na.rm=TRUE)
plot( 2014:2021, TCTI$'Germany', xlab='Года', ylab='Индекс времени движения на дороге', ylim=c(mn-13,mx+13),
main='Оценка индекса времени движения на дороге', col='blue', type='b', lty=1, pch=1,  lwd=2)
lines(2014:2021, TCTI$'United Kingdom', type='b', col='green', lty=1, pch=1, lwd=2)
lines(2014:2021, TCTI$'Greece', type='b', col='red', lty=1, pch=1, lwd=2)
lines(2014:2021, TCTI$'Romania', type='b', col='purple', lty=1, pch=1, lwd=2)
lines(2014:2021, TCTI$'Norway', type='b', col='gold', lty=1, pch=1, lwd=2)
legend('topright', cex=0.7, country,fill=c('blue', 'green', 'red', 'purple', 'gold'))
# оценка индекса загрязнения
evaluation_of<-'Pollution Index'
PI<-as.data.frame(
rbind(
df_14[country, evaluation_of],
df_15[country, evaluation_of],
df_16[country, evaluation_of],
df_17[country, evaluation_of],
df_18[country, evaluation_of],
df_19[country, evaluation_of],
df_20[country, evaluation_of],
df_21[country, evaluation_of]
),
row.names<-2014:2021
)
colnames(PI)<-country
mn<-min(PI, na.rm=TRUE)
mx<-max(PI, na.rm=TRUE)
plot( 2014:2021, PI$'Germany', xlab='Года', ylab='Индекс загрязнения', ylim=c(mn-13,mx+13),
main='Оценка индекса загрязнения', col='blue', type='b', lty=1, pch=1,  lwd=2)
lines(2014:2021, PI$'United Kingdom', type='b', col='green', lty=1, pch=1, lwd=2)
lines(2014:2021, PI$'Greece', type='b', col='red', lty=1, pch=1, lwd=2)
lines(2014:2021, PI$'Romania', type='b', col='purple', lty=1, pch=1, lwd=2)
lines(2014:2021, PI$'Norway', type='b', col='gold', lty=1, pch=1, lwd=2)
legend('topright', cex=0.6, country,fill=c('blue', 'green', 'red', 'purple', 'gold'))
# оценка климатического индекса
# за 2014 и 2015 года данные отсутствуют
evaluation_of<-'Climate Index'
CI<-as.data.frame(
rbind(
df_16[country, evaluation_of],
df_17[country, evaluation_of],
df_18[country, evaluation_of],
df_19[country, evaluation_of],
df_20[country, evaluation_of],
df_21[country, evaluation_of]
),
row.names<-2016:2021
)
colnames(CI)<-country
mn<-min(CI, na.rm=TRUE)
mx<-max(CI, na.rm=TRUE)
plot( 2016:2021, CI$'Germany', xlab='Года', ylab='Климатический индекс', ylim=c(mn-13,mx+13),
main='Оценка климатического индекса', col='blue', type='b', lty=1, pch=1,  lwd=2)
lines(2016:2021, CI$'United Kingdom', type='b', col='green', lty=1, pch=1, lwd=2)
lines(2016:2021, CI$'Greece', type='b', col='red', lty=1, pch=1, lwd=2)
lines(2016:2021, CI$'Romania', type='b', col='purple', lty=1, pch=1, lwd=2)
lines(2016:2021, CI$'Norway', type='b', col='gold', lty=1, pch=1, lwd=2)
legend('bottomright', cex=0.7, country,fill=c('blue', 'green', 'red', 'purple', 'gold'))
# cоздание документа html из url
url<-read_html('https://kudago.com/spb/list/33-luchshih-muzeya-peterburga/')
# извлекает все элементы HTML-кода, соответствующие заданному селектору в переменной selector_name
selector_name<-'a.post-list-item-title-link'
fnames<-html_nodes(url, selector_name)%>%html_text()%>%as.vector()
selector_name<-'address.post-list-item-info'
fnames2<-html_nodes(url, selector_name)%>%html_text()%>%as.vector()
selector_name<-'.post-list-item-title-link'
fnames_addr<-html_nodes(url, selector_name)%>%html_attr('href')
museums<-data.frame(fnames[1:40], fnames2, fnames_addr[1:40])
colnames(museums)<-c('Название музея', 'Адрес', 'Ссылка на фото')
View(df_14)
View(df_14)
View(museums)
library (lattice)
library("scatterplot3d")
#install.packages(packages)
library(ggplot2)
library(dplyr)
library(tidyr)
library(tibble)
#install.packages("vctrs")
#install.packages('tibble', repos = 'http://cran.rstudio.com/', type = 'source')
library(klaR)
library(party)
library(randomForest)
#ЧАСТЬ 1
#inf1 <- read.csv("C:/Users/nagal/OneDrive/GitHub/BigData_moment/LR6/CPS1985.csv")
inf1 <- read.csv("C:/Users/jakep/GitHub/BigData_moment/LR6/CPS1985.csv")
library (lattice)
library("scatterplot3d")
#install.packages(packages)
library(ggplot2)
library(dplyr)
library(tidyr)
library(tibble)
#install.packages("vctrs")
#install.packages('tibble', repos = 'http://cran.rstudio.com/', type = 'source')
library(klaR)
library(party)
library(randomForest)
#ЧАСТЬ 1
#inf1 <- read.csv("C:/Users/nagal/OneDrive/GitHub/BigData_moment/LR6/CPS1985.csv")
inf1 <- read.csv("C:/Users/jakep/GitHub/BigData_moment/LR6/CPS1985.csv", fileEncoding = "Windows-1251", header = TRUE, sep = ";", check.names = F)
inf1 <- inf1[,-8]
# Шаг 2. Удаление пропущенных значений
inf1$Доход[inf1$Доход==-9999] <- NA
# Шаг 2. Удаление пропущенных значений
inf1$Доход[inf1$Доход==-9999] <- NA
#inf1 <- read.csv("C:/Users/nagal/OneDrive/GitHub/BigData_moment/LR6/CPS1985.csv")
inf1 <- read.csv("C:/Users/jakep/GitHub/BigData_moment/LR6/CPS1985.csv", fileEncoding = "Windows-1251", header = TRUE, sep = ";", check.names = F)
inf1 <- inf1[,-8]
inf1 <- read.csv("C:/Users/jakep/GitHub/BigData_moment/LR6/CPS1985.csv")
inf1 <- read.csv("C:/Users/jakep/GitHub/BigData_moment/LR6/CPS1985.csv")
View(inf1)
setwd("C:/Users/jakep/GitHub/Coursework_2023/Данные")
library(readxl)
library(tidyr)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(factoextra)
library(readxl)
library(tidyr)
library(ggplot2)
library(dplyr)
library(RColorBrewer)
library(factoextra)
library(dendextend)
#ВЪЕЗДНЫЕ
inbound_tours<-read_excel("Въездные турпоездки.xlsx")
#colors <- rainbow(length(inbound_tours$Страна))
inbound_tours_long <- inbound_tours %>%
gather(key = "Год", value = "number_of_travelers", -Страна) %>%
group_by(Страна, Год) %>%
summarise(Общее_количество = sum(number_of_travelers))
#inbound_tours_long <- inbound_tours_long[inbound_tours_long$Общее_количество < 2000,]
ggplot(inbound_tours_long, aes(x = Год, y = Общее_количество, fill = Страна)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(name = "Количество приезжих", limits = c(0, max(inbound_tours_long$Общее_количество))) +
labs(title = "Количество приезжих из каждой страны за все года",
x = "Год", y = "Количество приезжих") +
theme_bw()
#ВЪЕЗДНЫЕ
inbound_tours<-read_excel("Въездные турпоездки.xlsx")
#colors <- rainbow(length(inbound_tours$Страна))
inbound_tours_long <- inbound_tours %>%
gather(key = "Год", value = "number_of_travelers", -Страна) %>%
group_by(Страна, Год) %>%
summarise(Общее_количество = sum(number_of_travelers))
inbound_tours_long <- inbound_tours_long[inbound_tours_long$Общее_количество > 7500,]
ggplot(inbound_tours_long, aes(x = Год, y = Общее_количество, fill = Страна)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(name = "Количество приезжих", limits = c(0, max(inbound_tours_long$Общее_количество))) +
labs(title = "Количество приезжих из каждой страны за все года",
x = "Год", y = "Количество приезжих") +
theme_bw()
#ВЪЕЗДНЫЕ
inbound_tours<-read_excel("Въездные турпоездки.xlsx")
#colors <- rainbow(length(inbound_tours$Страна))
inbound_tours_long <- inbound_tours %>%
gather(key = "Год", value = "number_of_travelers", -Страна) %>%
group_by(Страна, Год) %>%
summarise(Общее_количество = sum(number_of_travelers))
#inbound_tours_long <- inbound_tours_long[inbound_tours_long$Общее_количество < 2000,]
ggplot(inbound_tours_long, aes(x = Год, y = Общее_количество, fill = Страна)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(name = "Количество приезжих", limits = c(0, max(inbound_tours_long$Общее_количество))) +
labs(title = "Количество приезжих из каждой страны за все года",
x = "Год", y = "Количество приезжих") +
theme_bw()
#для компа
setwd("C:/Users/nagal/OneDrive/GitHub/Coursework_2023/Данные")
#ВЪЕЗДНЫЕ
inbound_tours<-read_excel("Въездные турпоездки.xlsx")
#colors <- rainbow(length(inbound_tours$Страна))
inbound_tours_long <- inbound_tours %>%
gather(key = "Год", value = "number_of_travelers", -Страна) %>%
group_by(Страна, Год) %>%
summarise(Общее_количество = sum(number_of_travelers))
inbound_tours_long <- inbound_tours_long[inbound_tours_long$Общее_количество < 2000,]
ggplot(inbound_tours_long, aes(x = Год, y = Общее_количество, fill = Страна)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(name = "Количество приезжих", limits = c(0, max(inbound_tours_long$Общее_количество))) +
labs(title = "Количество приезжих из каждой страны за все года",
x = "Год", y = "Количество приезжих") +
theme_bw()
#Общее количество приезжих по страннам за 9 лет
inbound_tours<-read_excel("Въездные турпоездки.xlsx")
all_inbound_tours<-data.frame(Страна=inbound_tours$Страна, ОбщееКоличество=rowSums(inbound_tours[,2:10]))
ggplot(all_inbound_tours, aes(x = Страна, y = ОбщееКоличество)) +
geom_bar(stat = "identity", fill = "navyblue", color = "black") +
labs(x = "", y = "Количество человек",
title = "Общее количество приезжих по страннам за 9 лет") +
scale_x_discrete(labels = all_inbound_tours$Страна,
limits = all_inbound_tours$Страна) +
coord_flip() +
theme_bw()
field_tours<-read_excel("Выездные турпоездки.xlsx")
#field_tours_colors <- rainbow(length(field_tours$Страна))
field_tours_long <- field_tours %>%
gather(key = "Год", value = "number_of_travelers", -Страна) %>%
group_by(Страна, Год) %>%
summarise(Общее_количество = sum(number_of_travelers))
#field_tours_long <- field_tours_long[field_tours_long$Общее_количество < 5000,]
ggplot(field_tours_long, aes(x = Год, y = Общее_количество, fill = Страна)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(name = "Количество граждан", limits = c(0, max(field_tours_long$Общее_количество))) +
labs(title = "Количество выездных граждан России в страны за все года",
x = "Год", y = "Количество граждан") +
theme_bw()
#Общее количество уезжих по страннам за 9 лет
all_field_tours <- data.frame(Страна = field_tours$Страна,
ОбщееКоличество = rowSums(field_tours[, 2:10]))
ggplot(all_field_tours, aes(x = Страна, y = ОбщееКоличество)) +
geom_bar(stat = "identity", fill = "navyblue", color = "black") +
labs(x = "", y = "Количество человек",
title = "Общее количество приезжих по страннам за 9 лет") +
scale_x_discrete(labels = all_field_tours$Страна,
limits = all_field_tours$Страна) +
coord_flip() +
theme_bw()
#Путешествие в России
In_Russian<-read_excel("Внутри России.xlsx")
Colors_in_russian <- rainbow(length(In_Russian$Округа))
Colors_in_russian <- c("black", Colors_in_russian[-1])
In_Russian_2022<-data.frame(Округ=In_Russian$Округа, ОбщееКоличество=In_Russian$'2022')
In_Russian_2022 <- In_Russian_2022[In_Russian_2022$ОбщееКоличество/1000 < 1000,]
ggplot(In_Russian_2022, aes(x = Округ, y = ОбщееКоличество / 1000, fill = Округ)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(name = "Количество человек (тыс.)", limits = c(0, max(In_Russian_2022$ОбщееКоличество/1000))) +
labs(title = "Общее количесво человек, путешевствующих по областям в 2022 году") +
theme_bw() +
theme(legend.position = "bottom",axis.text.x = element_blank())
View(In_Russian)
View(In_Russian)
#Путешествие в России
In_Russian_2022<-read_excel("Внутри России.xlsx")
Colors_in_russian <- rainbow(length(In_Russian$Округа))
#Путешествие в России
In_Russian_2022<-read_excel("Внутри России.xlsx")
Colors_in_russian <- rainbow(length(In_Russian_2022$Округа))
Colors_in_russian <- c("black", Colors_in_russian[-1])
In_Russian_2022 <- In_Russian_2022[In_Russian_2022$ОбщееКоличество/1000 < 1000,]
View(In_Russian_2022)
#Путешествие в России
In_Russian_2022<-read_excel("Внутри России.xlsx")
Colors_in_russian <- rainbow(length(In_Russian$Округа))
#Путешествие в России
In_Russian_2022<-read_excel("Внутри России.xlsx")
Colors_in_russian <- rainbow(length(In_Russian$Округа))
#Путешествие в России
In_Russian_2022<-read_excel("Внутри России.xlsx")
Colors_in_russian <- rainbow(length(In_Russian_2022$Округа))
Colors_in_russian <- c("black", Colors_in_russian[-1])
In_Russian_2022<-data.frame(Округ=In_Russian_2022$Округа, ОбщееКоличество=In_Russian_2022$'2022')
In_Russian_2022 <- In_Russian_2022[In_Russian_2022$ОбщееКоличество/1000 < 1000,]
ggplot(In_Russian_2022, aes(x = Округ, y = ОбщееКоличество / 1000, fill = Округ)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(name = "Количество человек (тыс.)", limits = c(0, max(In_Russian_2022$ОбщееКоличество/1000))) +
labs(title = "Общее количесво человек, путешевствующих по областям в 2022 году") +
theme_bw() +
theme(legend.position = "bottom",axis.text.x = element_blank())
#Путешествие в России
In_Russian_2022<-read_excel("Внутри России.xlsx")
Colors_in_russian <- rainbow(length(In_Russian_2022$Округа))
Colors_in_russian <- c("black", Colors_in_russian[-1])
In_Russian_2022<-data.frame(Округ=In_Russian_2022$Округа, ОбщееКоличество=In_Russian_2022$'2022')
#In_Russian_2022 <- In_Russian_2022[In_Russian_2022$ОбщееКоличество/1000 < 1000,]
ggplot(In_Russian_2022, aes(x = Округ, y = ОбщееКоличество / 1000, fill = Округ)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(name = "Количество человек (тыс.)", limits = c(0, max(In_Russian_2022$ОбщееКоличество/1000))) +
labs(title = "Общее количесво человек, путешевствующих по областям в 2022 году") +
theme_bw() +
theme(legend.position = "bottom",axis.text.x = element_blank())
In_Russian_clast <- select(In_Russian, -Округа)
In_Russian<-read_excel("Внутри России.xlsx")
Colors_in_russian <- rainbow(length(In_Russian$Округа))
Colors_in_russian <- c("black", Colors_in_russian[-1])
In_Russian_2022<-data.frame(Округ=In_Russian$Округа, ОбщееКоличество=In_Russian$'2022')
#In_Russian_2022 <- In_Russian_2022[In_Russian_2022$ОбщееКоличество/1000 < 1000,]
ggplot(In_Russian_2022, aes(x = Округ, y = ОбщееКоличество / 1000, fill = Округ)) +
geom_bar(stat = "identity", position = "dodge") +
scale_y_continuous(name = "Количество человек (тыс.)", limits = c(0, max(In_Russian_2022$ОбщееКоличество/1000))) +
labs(title = "Общее количесво человек, путешевствующих по областям в 2022 году") +
theme_bw() +
theme(legend.position = "bottom",axis.text.x = element_blank())
In_Russian_clast <- select(In_Russian, -Округа)
In_Russian_clast_scaled <- scale(In_Russian_clast)
hc <- hclust(dist(In_Russian_clast_scaled), method = "ward.D2")
plot(hc, labels = In_Russian$Округа, main="Дендограмма",ylab="Сходство",xlab="Округа")
rect.hclust(hc, 3, border="red")
abline(h = 1.5, col = "blue", lwd='2')
dend <- as.dendrogram(hc)
dend <- color_branches(dend, 3)
plot(dend)
groups <- cutree(hc, 3)
In_Russian[groups==1, 1]
In_Russian[groups==2, 1]
In_Russian[groups==3, 1]
#Путешествия по россии за 2022 общее по округам
In_Russian_all <- read_excel("Внутри России общее.xlsx")
colors <- brewer.pal(8, "Dark2")
ggplot(In_Russian_all, aes(x = Округ, y = Количество/1000, fill = Округ)) +
geom_bar(stat = "identity") +
scale_fill_manual(values = colors) +
labs(title = "Количество путешественников в округах России",
x = "Округ", y = "Количество путешественников(в тыс.)") +
guides(fill = FALSE)
travel_industry<-read_excel("Туриндустрия.xlsx")
#Все организации
number_organ<- rbind(travel_industry[1:1, ])
number_organ_long<-gather(number_organ,key="Год",value="Количество", -Наименование)
ggplot(number_organ_long, aes(x = Год, y = Количество, fill = Наименование)) +
geom_bar(stat = "identity", position = "dodge")
travel_industry<-read_excel("Туриндустрия.xlsx")
#Все организации
number_organ<- rbind(travel_industry[1:1, ])
number_organ_long<-gather(number_organ,key="Год",value="Количество", -Наименование)
ggplot(number_organ_long, aes(x = Год, y = Количество, fill = Наименование)) +
geom_bar(stat = "identity", position = "dodge")
#Прибыльные
number_organ_plus<- rbind(travel_industry[2:2, ])
number_organ_plus_long<-gather(number_organ_plus,key="Год",value="Количество", -Наименование)
ggplot(number_organ_plus_long, aes(x = Год, y = Количество, fill = Наименование)) +
geom_bar(stat = "identity", position = "dodge")
#Убыточные
number_organ_minus<- rbind(travel_industry[3:3, ])
number_organ_minus_long<-gather(number_organ_minus,key="Год",value="Количество", -Наименование)
ggplot(number_organ_minus_long, aes(x = Год, y = Количество, fill = Наименование)) +
geom_bar(stat = "identity", position = "dodge")
#Выручка
revenue<- rbind(travel_industry[4:4, ])
revenue_long<-gather(revenue,key="Год",value="Количество", -Наименование)
ggplot(revenue_long, aes(x = Год, y = Количество, fill = Наименование)) +
geom_bar(stat = "identity", position = "dodge")
#Прибыль
revenue_plus<- rbind(travel_industry[5:5, ])
revenue_plus_long<-gather(revenue_plus,key="Год",value="Количество", -Наименование)
ggplot(revenue_plus_long, aes(x = Год, y = Количество, fill = Наименование)) +
geom_bar(stat = "identity", position = "dodge")
#Убыток
revenue_minus<- rbind(travel_industry[6:6, ])
revenue_minus_long<-gather(revenue_minus,key="Год",value="Количество", -Наименование)
ggplot(revenue_minus_long, aes(x = Год, y = Количество, fill = Наименование)) +
geom_bar(stat = "identity", position = "dodge")
#NFR(прибыль минус убыток)
NFR<- rbind(travel_industry[7:7, ])
NFR_long<-gather(NFR,key="Год",value="Количество", -Наименование)
ggplot(NFR_long, aes(x = Год, y = Количество, fill = Наименование)) +
geom_bar(stat = "identity", position = "dodge")
#Ввод в действие объектов туризма с отелями
tourism_facilities<-travel_industry[9:14,]
tourism_facilities_long <- gather(tourism_facilities, key = "Год", value = "Значение", -Наименование)
ggplot(tourism_facilities_long, aes(x = Год, y = Значение, fill = Наименование)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Ввод в действие объектов туризма за период с 2014 по 2021 год",
x = "Год",
y = "Значение") +
theme_bw()
#Ввод в действие объектов туризма без отелей
tourism_facilities<-travel_industry[11:14,]
tourism_facilities_long <- gather(tourism_facilities, key = "Год", value = "Значение", -Наименование)
ggplot(tourism_facilities_long, aes(x = Год, y = Значение, fill = Наименование)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Ввод в действие объектов туризма за период с 2014 по 2021 год",
x = "Год",
y = "Значение") +
theme_bw()
season<-read_excel("По сезонам.xlsx")
season_long <- season %>%
gather(key = "Квартал", value = "Количество", -Округ) %>%
mutate(Квартал = factor(Квартал, levels = c("1 квартал", "2 квартал", "3 квартал", "4 квартал","Холодные","Теплые")))
season_long <- season_long %>%
mutate(Количество = Количество / 1000)
# для кварталов холодных и теплых
season_cold_warm <- season_long %>%
filter(Квартал %in% c("Холодные", "Теплые"))
ggplot(season_cold_warm, aes(x = Округ, y = Количество/1000, fill = Квартал)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Количество путешественников по округам холодные и теплые",
x = "Округ",
y = "Количество путешественников (тыс.)") +
scale_fill_manual(values =  c("#A6CEE3", "#FF8000")) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 1, size = 9)) +
scale_x_discrete(limits = unique(season_cold_warm$Округ), expand = c(0, 0.5))
season_all<-read_excel("По сезонам общее.xlsx")
season_long_all <- season_all %>%
gather(key = "Квартал", value = "Количество", -Округ) %>%
mutate(Квартал = factor(Квартал, levels = c("1 квартал", "2 квартал", "3 квартал", "4 квартал","Холодные","Теплые")))
season_long_all <- season_long_all %>%
mutate(Количество = Количество / 1000)
# для кварталов 2 и 3
season_23_all <- season_long_all %>%
filter(Квартал %in% c("Холодные", "Теплые"))
ggplot(season_23_all, aes(x = Округ, y = Количество/1000, fill = Квартал)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Количество путешественников по округам в холодные и теплые",
x = "Округ",
y = "Количество путешественников (тыс.)") +
scale_fill_manual(values =  c("#56B4E9", "#E69F00")) +
theme_bw()  +
scale_x_discrete(limits = unique(season_23_all$Округ), expand = c(0, 0.5))
